{"version":3,"sources":["utils/mutations.js","utils/auth.js","pages/Signup.js","pages/Login.js","components/Navigation.js","pages/Homepage.js","utils/queries.js","pages/Profile.js","components/Herosection.js","pages/Home.js","App.js","index.js"],"names":["LOGIN_USER","gql","_templateObject","_taggedTemplateLiteral","ADD_USER","_templateObject2","GET_CITY","_templateObject3","SAVE_SEARCH","_templateObject4","REMOVE_SEARCH","_templateObject5","AuthService","_classCallCheck","_createClass","key","value","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Signup","_useState","useState","email","username","password","_useState2","_slicedToArray","credentials","setUserCredentials","_useMutation","useMutation","_useMutation2","addUser","handleInputChange","error","event","_event$target","target","name","_objectSpread","_defineProperty","handleLoginSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$addUser","data","wrap","_context","prev","next","preventDefault","currentTarget","checkValidity","stopPropagation","console","log","variables","sent","Auth","login","t0","stop","_x","apply","arguments","_jsx","_Fragment","children","_jsxs","Form","onSubmit","className","Group","controlId","Label","Control","type","placeholder","onChange","Text","Button","variant","Login","handleLogin","_yield$login","Navigation","Navbar","bg","expand","Brand","href","alt","src","width","height","Toggle","Collapse","id","Nav","loggedIn","Link","onClick","logout","SearchPlaces","searchInput","setSearchInput","_useState3","_useState4","restaurants","setRestaurants","_useState5","_useState6","getCity","_useMutation3","error1","_useMutation4","saveSearch","handleFormSubmit","error2","response","results","abrupt","cityName","_toConsumableArray","JSON","stringify","handleSaveSearch","_ref2","_callee2","searchId","restaurantsToSave","_yield$saveSearch","_context2","find","restaurant","restaurantId","_x2","useEffect","Jumbotron","fluid","Container","Row","Col","xs","md","e","size","class","length","CardColumns","map","Card","border","Img","concat","photo","restaurantName","Body","Title","Subtitle","priceLevel","rating","GET_ME","Profile","_useQuery","useQuery","loading","update","cache","removeSearch","writeQuery","query","me","userData","handleDeleteSearch","_yield$removeSearch","savedLocations","Herosection","to","home","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","InMemoryCache","App","ApolloProvider","Router","style","display","flexDirection","Routes","Route","path","element","Home","Homepage","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2d03fe3.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const GET_CITY = gql`\n  mutation getCity($cityName: String!) {\n    getCity(cityName: $cityName) {\n      cityId\n      cityName\n      lat\n      lng\n      photo\n      restaurants {\n        restaurantId\n        restaurantName\n        priceLevel\n        rating\n        photo\n      }\n    }\n  }\n`;\n\nexport const SAVE_SEARCH = gql`\n  mutation saveSearch($restaurantId: String!, $restaurantName: String!, $priceLevel: String!, $rating: String!, $photo: String) {\n    saveSearch(restaurantId: $restaurantId, restaurantName: $restaurantName, priceLevel: $priceLevel, rating: $rating, photo: $photo) {\n      _id\n      username\n      email\n      savedLocations {\n        restaurantId\n        restaurantName\n        priceLevel\n        rating\n        photo\n      }\n    }\n  }\n`;\n\nexport const REMOVE_SEARCH = gql`\n  mutation removeSearch($restaurantId: String!) {\n    removeSearch(restaurantId: $restaurantId) {\n      _id\n      username\n      email\n      savedLocations {\n        restaurantId\n        restaurantName\n        priceLevel\n        rating\n        photo\n      }\n    }\n  }\n`;\n","// use this to decode a token and get the user's information out of it\nimport decode from 'jwt-decode';\n\n// create a new class to instantiate for a user\nclass AuthService {\n  // get user data\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  // check if user's logged in\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  }\n\n  // check if token is expired\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport \"../styles/signup.css\";\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nexport default function Signup() {\n    const [credentials, setUserCredentials] = useState({email: '', username: '', password: ''});\n    const [addUser, {error}] = useMutation(ADD_USER);\n\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        setUserCredentials({ ...credentials, [name]: value });\n};\n\n    const handleLoginSubmit = async (event) =>{\n        event.preventDefault();\n\n        const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    };\n\n    console.log(credentials.email, credentials.password, credentials.username);\n\n    try {\n       const {data} = await addUser({\n            variables: { ...credentials }\n        });\n       \n       Auth.login(data.addUser.token)\n    }\n    catch(err){\n        console.log(err);\n    };\n\n    setUserCredentials({\n        username:'',\n        email: '',\n        password: '',\n    })\n    };\n\n  return (\n    <>\n        <Form onSubmit={handleLoginSubmit} className=\"signupform\">\n        <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Username</Form.Label>\n            <Form.Control \n            type=\"username\" \n            name=\"username\"\n            value= {credentials.username}\n            placeholder=\"Please enter a username.\" \n            onChange={handleInputChange}\n            />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicEmail\" >\n            <Form.Label>Email address</Form.Label>\n            <Form.Control \n            type=\"email\" \n            name=\"email\"\n            value= {credentials.email}\n            placeholder=\"Please enter a valid email.\"\n            onChange={handleInputChange} />\n            <Form.Text className=\"text-muted\">\n            We'll never share your email with anyone else.\n            </Form.Text>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control \n            type=\"password\" \n            name=\"password\"\n            value= {credentials.password}\n            placeholder=\"Password\"  \n            onChange={handleInputChange}/>\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n            Sign Up\n        </Button>\n    </Form>     \n    </>\n  )\n}\n","import React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport \"../styles/login.css\";\n\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nexport default function Login() {\n    const [credentials, setUserCredentials] = useState({email: '', password: ''});\n    const [login, {error}] = useMutation(LOGIN_USER);\n\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        setUserCredentials({ ...credentials, [name]: value });\n    };\n\n    const handleLogin = async (event) =>{\n        event.preventDefault();\n\n        // check if form has everything (as per react-bootstrap docs)\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        try {\n            const {data} = await login({variables:{...credentials}});\n            Auth.login(data.login.token)\n        }\n        catch(err){\n            console.log(err);\n        };\n\n        setUserCredentials({\n            email:'',\n            password: '',\n        })\n    };\n\n  return (\n    <>\n        <Form onSubmit={handleLogin} className=\"loginform\">\n        <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control \n            type=\"text\" \n            name=\"email\"\n            value= {credentials.email}\n            placeholder=\"Please enter an email.\" \n            onChange={handleInputChange}\n            />\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control \n            type=\"password\" \n            name=\"password\"\n            value= {credentials.password}\n            placeholder=\"Password\"  \n            onChange={handleInputChange}/>\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n            Login\n        </Button>\n    </Form>  \n    </>\n  );\n};\n","import React from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport Auth from '../utils/auth';\nimport \"../styles/navbar.css\";\n\n\nexport default function Navigation() {\n  return (\n    <>\n    <Navbar className=\"nav-container\" bg=\"dark\" variant=\"dark\" expand=\"lg\">\n        <Navbar.Brand  href='/'>\n          <img\n            alt=\"\"\n            src=\"./logo.png\"\n            width=\"50\"\n            height=\"50\"\n            className=\"d-inline-block center\"\n          />\n          Destination Unknown\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            {Auth.loggedIn() ? (\n              <>\n                <Nav.Link href='/profile'>Profile</Nav.Link>\n                <Nav.Link onClick={Auth.logout}>Logout</Nav.Link>\n              </>\n            ) : (\n              <>\n                <Nav.Link href='login' className=\"d-inline-block center\">Login</Nav.Link>\n                <Nav.Link href='signup'>Sign Up!</Nav.Link>\n              </>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n    </Navbar>\n    </>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from 'react-bootstrap';\nimport \"../styles/mainpage.css\";\n\nimport { useMutation } from '@apollo/client';\n\nimport Auth from '../utils/auth';\n//import { GET_CITY, GET_CATEGORY } from '../utils/mutations';\nimport { GET_CITY, SAVE_SEARCH } from '../utils/mutations';\n//import { saveBookIds, getSavedBookIds } from '../utils/localStorage';\n\nconst SearchPlaces = () => {\n  // create state for holding our search field data\n  const [searchInput, setSearchInput] = useState('');\n  const [restaurants, setRestaurants] = useState('');\n  const [searches, setSearches] = useState([]);\n  const [getCity, { error1 }] = useMutation(GET_CITY);\n  const [saveSearch, { error2 }] = useMutation(SAVE_SEARCH);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!searchInput) {\n      return false;\n    }\n\n\n    try {\n      const response = await getCity({\n        variables: { cityName: searchInput},\n      });\n\n      const results = response.data.getCity.restaurants;\n      setRestaurants([]); //clear array\n      setRestaurants([...results]);\n\n      \n      console.log(restaurants);\n\n    } catch (err) {\n      console.log(JSON.stringify(err, null, 2));\n    }\n\n    setSearchInput('');\n  };\n\n  const handleSaveSearch = async (searchId) => {\n    // find the restaurant in `restaurantsToSave` by the matching id\n    const restaurantsToSave = restaurants.find((restaurant) => restaurant.restaurantId === searchId);\n\n    // get token\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    console.log(restaurantsToSave);\n\n    try {\n      // // Execute the SAVE_SEARCH mutation \n      const { data } = await saveSearch({ \n        variables:  { ...restaurantsToSave },\n      });\n    } catch (err) {\n      console.log(JSON.stringify(err, null, 2));\n    }\n\n  };\n\n  useEffect(() => {\n    console.log(restaurants);\n  }, [restaurants]);\n\n  return (\n    <>\n    \n      <Jumbotron fluid className='search-container-css'>\n        <Container >\n          <h1 className=\"searchtitle\">Search for Local Restaurants!</h1> \n          <Form onSubmit={handleFormSubmit}>\n            <Form.Row className=\"justify-content-md-center\">\n              <Col xs={12} md={6}>\n                <Form.Control\n                  name='searchInput'\n                  value={searchInput}\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type='text'\n                  size='lg'\n                  placeholder='Pick A City'\n                />\n              </Col>\n              </Form.Row>\n              <Form.Row>\n              <Col xs={12} md={12}>\n                <Button type='submit' variant='success' \n                size='lg'\n                className=\"searchbtn-home\">\n                <i class=\"fa-solid fa-thumbtack\"></i> Search\n                </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </Container>\n      </Jumbotron>\n\n      \n      <Container>\n        {restaurants.length ? (\n        <CardColumns>\n          {restaurants.map((restaurant) => {\n\n            if(restaurant && restaurant.restaurantId) {\n              return (\n                <Card key={restaurant.restaurantId} border='border-bottom border-warning' className=\"cardbody-css\">\n                  <Card.Img src={`https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photo_reference=${restaurant.photo}&key=AIzaSyDEHGBibTeuDpUclYDLNXIAZ0J7NKWewJw`} alt={`The image for ${restaurant.restaurantName}`} variant='top' />\n                  <Card.Body>\n                    <Card.Title className=\"cardtitle\">{restaurant.restaurantName}</Card.Title>\n                    <Card.Subtitle className=\"cardprice\">\n                    <i class=\"fa-solid fa-wallet\"></i> {`Restaurant Price: ${restaurant.priceLevel}`}\n                    </Card.Subtitle>\n                    <Card.Subtitle className=\"cardrating\"><i class=\"fa-solid fa-certificate\"></i> {`Rating: ${restaurant.rating}`}\n                    </Card.Subtitle>\n                    {Auth.loggedIn() && (\n                    <Button \n                      className='btn-info center save-btn-css'\n                      variant=\"secondary\" size=\"sm\"\n                      onClick={() => handleSaveSearch(restaurant.restaurantId)}>\n                       Save <i class=\"fa-solid fa-heart\"></i>\n                    </Button>\n                  )}\n                  </Card.Body>\n                </Card>\n              );\n            } else return;\n          })}\n        </CardColumns>\n        ) : (\n          <div></div>\n        )}\n      </Container>\n\n      \n    </>\n  );\n};\n\nexport default SearchPlaces;\n","import { gql } from '@apollo/client';\n\nexport const GET_ME = gql`\n  query me {\n    me {\n      _id\n      username\n      email\n      savedLocations {\n        restaurantId\n        restaurantName\n        priceLevel\n        rating\n        photo\n      }\n    }\n  }\n`;","import React from 'react';\nimport { Jumbotron, Container, Button, Card, CardColumns } from 'react-bootstrap';\nimport { useQuery, useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { GET_ME } from '../utils/queries';\nimport { REMOVE_SEARCH } from '../utils/mutations';\n\nconst Profile = () => {\n  const { loading, data } = useQuery(GET_ME);\n  const [removeSearch, { error }] = useMutation(REMOVE_SEARCH, {\n    update(cache, { data: { removeSearch } }) {\n      try {\n        cache.writeQuery({\n          query: GET_ME,\n          data: { me: removeSearch },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    },\n  });\n\n  const userData = data?.me || [];\n  if (loading) {\n    return <h2>LOADING...</h2>;\n  }\n\n  const handleDeleteSearch = async (restaurantId) => {\n    console.log(restaurantId); //debug\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      // // Execute the REMOVE_SEARCH mutation using the removeSearch data\n      const { data } = await removeSearch({ \n        variables:  { restaurantId },\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Viewing saved searches!</h1>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <h2>\n          {userData.savedLocations.length\n            ? `Viewing ${userData.savedLocations.length} saved ${userData.savedLocations.length === 1 ? 'searches' : 'searches'}:`\n            : 'You have no saved searches!'}\n        </h2>\n        <CardColumns>\n          {userData.savedLocations.map((restaurant) => {\n            return (\n              <Card key={restaurant.restaurantId} border='dark'>\n                <Card.Img src={`https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photo_reference=${restaurant.photo}&key=AIzaSyDEHGBibTeuDpUclYDLNXIAZ0J7NKWewJw`} alt={`The image for ${restaurant.restaurantName}`} variant='top' />\n                <Card.Body>\n                  <Card.Title>{restaurant.restaurantName}</Card.Title>\n                  <Card.Subtitle>{`Restaurant Price: ${restaurant.priceLevel} and Rating: ${restaurant.rating}`}</Card.Subtitle>\n                  {/* <Card.Text>{restaurant.description}</Card.Text> */}\n                  <Button className='btn-block btn-danger' onClick={() => handleDeleteSearch(restaurant.restaurantId)}>\n                    Delete\n                  </Button>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n}\n\n  \n\n\nexport default Profile;\n","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport \"../styles/herosection.css\";\n\n\nexport default function Herosection() {\n  return (\n    <div className='hero-container'>\n      <h1 className=\"main-htag\"> ADVENTURE AWAITS</h1>\n      <p>What are you waiting for to plan your next trip?</p>\n      <Button \n      className='btn btn-light hero-button' \n      type=\"button\" >\n      <Link to='homepage'> GET STARTED </Link>\n      </Button>\n    </div>\n  )\n}\n","import React from 'react'\nimport Herosection from '../components/Herosection'\n\nexport default function home() {\n  return (\n    <div>\n      <Herosection />\n    </div>\n  )\n}\n\n","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { ApolloClient, ApolloProvider, InMemoryCache, createHttpLink } from '@apollo/client';\nimport { setContext } from \"@apollo/client/link/context\";\nimport Signup from \"./pages/Signup\";\nimport Login from \"./pages/Login\";\nimport Navigation from \"./components/Navigation\";\nimport Homepage from \"./pages/Homepage\";\nimport Profile from \"./pages/Profile\";\nimport Home from \"./pages/Home\";\n// import Homehero from \"./components/Herosection\"\n// import Searchcards from \"./components/Searchcards\";\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(\"id_token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n      <>\n      <div style={{ height: '100vh', display: 'flex', flexDirection: 'column' }}>\n        <Navigation />\n        <Routes>\n          <Route path='/' element={<Home />} />\n          <Route path='/homepage' element={<Homepage />} />\n          <Route path=\"signup\" element={<Signup />} />\n          <Route path=\"login\" element={<Login />} />\n          <Route path=\"profile\" element={<Profile />} />\n        </Routes>\n        </div>\n        \n      </>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}